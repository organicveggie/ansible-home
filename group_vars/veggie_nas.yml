###
### Common
###
veggie_hostname: "{{ veggie_nas_domain_name }}"
veggie_admin_username: "{{ veggie_nas_admin_username }}"
veggie_admin_passwd: "{{ veggie_nas_admin_passwd }}"
veggie_users_passwords:
  retropie: "*"


###
### Docker
###
docker_home: /mnt/nas/docker
docker_admin_user: "{{ veggie_admin_username }}"

###
### Glances
###
glances_host_domain: "{{ veggie_nas_domain_name }}"

###
### InfluxDB
###
influxdb_url: "https://{{ influxdb_docker_hostname }}.{{ influxdb_docker_host_domain }}"
influxdb_docker_host_domain: "{{ veggie_nas_domain_name }}"
influxdb_docker_data_dir: "/mnt/nas/influxdb/lib"
influxdb_docker_conf_dir: "/mnt/nas/influxdb/etc"
influxdb_docker_zfs_filesystems:
  - "nas/influxdb"
  - "nas/influxdb/etc"
  - "nas/influxdb/lib"
influxdb_docker_superuser_name: "{{ influxdb_admin_user }}"
influxdb_docker_superuser_password: "{{ influxdb_admin_password }}"
influxdb_docker_superuser_org: "{{ influxdb_admin_org }}"
influxdb_docker_superuser_token: "{{ influxdb_admin_token }}"
influxdb_docker_init_bucket: "admin"

###
### Let's Encrypt / Certbot
###
certbot_domain_name: "{{ veggie_nas_domain_name }}"
certbot_admin_email: "{{ letsencrypt_email }}"
certbot_aws_access_key_id: "{{ letsencrypt_aws_access_key }}"
certbot_aws_secret_access_key: "{{ letsencrypt_aws_secret_key }}"

###
### Logrotate
###
logrotate_scripts:
  - name: rclone
    path: "/var/log/rclone.log"
    options:
      - daily
      - rotate 7
      - missingok
      - compress
      - delaycompress
      - copytruncate

###
### NFS
###
nfs_exports:
  - "/mnt/nas/data/books {{ veggie_virt_domain_name }}(rw,sync,no_subtree_check,no_root_squash)"
  - "/mnt/nas/data/music {{ veggie_virt_domain_name }}(rw,sync,no_subtree_check,no_root_squash)"
  - "/mnt/nas/data/videos {{ veggie_virt_domain_name }}(rw,sync,no_subtree_check,no_root_squash)"

###
### Plex
###
plex_docker_claim: "{{ plex_claim }}"
plex_docker_db_path: "/mnt/nas/plex"
plex_docker_transcode_path: "/plex_transcode"
plex_docker_media_path: /mnt/nas/data

###
### Pip
###
pip_install_packages:
  - docker

###
### Portainer
###
portainer_available_externally: "true"
portainer_admin_password: "{{ vault_portainer_admin_password }}"
portainer_network_name: "{{ traefik_network_name }}"
portainer_host_domain: "{{ veggie_nas_domain_name }}"

###
### RClone
###
rclone_configs:
  - name: AWSS3Remote
    properties:
      type: s3
      provider: AWS
      env_auth: false
      region: us-west-2
      location_constraint: us-west-2
      acl: private
      server_side_encryption: AES256
      storage_class: STANDARD
      access_key_id: "{{ aws_s3_rclone_access_key }}"
      secret_access_key: "{{ aws_s3_rclone_secret_key }}"
rclone_config_path: "{{ veggie_rclone_config_path }}"
veggie_rclone_s3_bucket: "{{ veggie_nas_rclone_s3_bucket }}"
veggie_rclone_config_path: /root/.config/rclone/rclone.conf

###
### Restic
###
restic_rest_server_backup_dir: "{{ veggie_nas_restic_rest_server_backup_dir }}"
restic_rest_server_hostname: "{{ veggie_nas_restic_rest_server_hostname }}"
restic_rest_server_host_domain: "{{ veggie_nas_domain_name }}"

###
### Samba
###
samba_domain_master: auto
samba_preferred_master: auto
samba_wins_support: false

# Defaults to true, which disables share browsing by Windows clients.
# See https://access.redhat.com/security/cve/cve-2017-7494
samba_mitigate_cve_2017_7494: false
samba_users:
  - name: "{{ veggie_nas_admin_username }}"
    password: "{{ veggie_nas_admin_samba_passwd }}"
  # - name: "plex"
  #   password: "{{ veggie_nas_plex_password }}"
  - name: "retropie"
    password: "{{ veggie_nas_retropie_password }}"
  - name: "kstar"
    password: "{{ veggie_kstar_password }}"
samba_shares:
  - name: books
    path: /mnt/nas/data/books
    group: book_writer
    write_list: +book_writer
  - name: documents
    path: /mnt/nas/data/documents
    group: doc_writer
    write_list: +doc_writer
  - name: music
    path: /mnt/nas/data/music
    group: music_writer
    write_list: +music_writer
  - name: photos
    path: /mnt/nas/data/photos
    group: photo_writer
    write_list: +photo_writer
  - name: roms
    path: /mnt/nas/data/roms
    group: rom_writer
    write_list: +rom_writer
  - name: source
    path: /mnt/nas/data/source
    group: source_writer
    write_list: +source_writer
  - name: videos
    path: /mnt/nas/data/videos
    group: media_writer
    write_list: +media_writer
  - name: kstar
    path: /mnt/nas/kstar
    owner: kstar
    group: kstar
    create_mode: 0740
    directory_mode: 0770
veggie_nas_samba_groups:
  - book_writer
  - doc_writer
  - media_writer
  - music_writer
  - photo_writer
  - rom_writer
  - source_writer

###
### Telegraf
###
telegraf_influxdb_url: "{{ influxdb_url }}"
telegraf_influxdb_token: "{{ influxdb_telegraf_token }}"
telegraf_influxdb_org: "{{ influxdb_admin_org }}"
telegraf_plugin_docker: true
telegraf_plugin_smartctl: true
telegraf_plugins_extra:
  - name: prometheus
    options:
      urls:
        - "$INFLUX_URL"
    tags:
      influxdb_bucket: "influxdb"
  - name: zfs
    options:
      poolMetrics: true

###
### TimeMachine
###
timemachine_data_directory: "/mnt/nas/time-machine"
timemachine_volume_size_limit: "512000"
timemachine_share_name: "nas-time-machine"
timemachine_smb_password: "{{ timemachine_smb_password_secret }}"

###
### Traefik
###
traefik_hostname: "traefik.{{ veggie_nas_domain_name }}"
traefik_confkey_api:
  dashboard: true # use this for enabling the dashboard
# traefik_confkey_log:
#   level: DEBUG
#   filePath: /var/log/traefik.log
traefik_qs_https: "true"
traefik_qs_https_redirect: "true"
traefik_qs_https_le: "true"
traefik_qs_https_le_mail: "{{ letsencrypt_email }}"
traefik_qs_log_level: INFO
# Defined dynamically in roles/veggie_nas/tasks/docker.yml
# traefik_extra_networks:
traefik_ports:
  - '80:80'
  - '443:443'
traefik_labels:
  traefik.enable: "true"
  traefik.http.routers.traefik.service: "api@internal"
  traefik.http.routers.traefik.entrypoints: "https"
  traefik.http.routers.traefik.tls.certresolver: "letsencrypt"
  traefik.http.routers.traefik.tls.domains[0].main: "*.{{ veggie_nas_domain_name }}"
traefik_confkey_providers:
  docker:
    defaultRule: "Host(`{{ traefik_hostname }}`)"
traefik_le_ca_server: "https://acme-v02.api.letsencrypt.org/directory"
# traefik_le_ca_server: "https://acme-staging-v02.api.letsencrypt.org/directory"
traefik_confkey_certificatesResolvers:
  letsencrypt:
    acme:
      caServer: "{{ traefik_le_ca_server }}"
      dnsChallenge:
        provider: route53
traefik_container_environment:
  AWS_HOSTED_ZONE_ID: "{{ acme_route53_hosted_zone_id }}"
  AWS_ACCESS_KEY_ID: "{{ letsencrypt_aws_access_key }}"
  AWS_SECRET_ACCESS_KEY: "{{ letsencrypt_aws_secret_key }}"

###
### Users/Groups
###
users_list_host: "{{ nas_users }}"