###
### Calibre
###
calibre_web_user_name: "calibre"
calibre_web_group_name: "calibre"
calibre_web_docker_book_dir: "{{ vault_calibre_web_docker_book_dir }}"
calibre_web_docker_host_domain: "{{ veggie_base_domain_name }}"
calibre_web_docker_uid: "{{ vault_calibre_web_docker_uid }}"
calibre_web_docker_gid: "{{ vault_calibre_web_docker_gid }}"
calibre_web_docker_network_subnet: "{{ vault_calibre_web_docker_network_subnet }}"
calibre_web_docker_network_gateway: "{{ vault_calibre_web_docker_network_gateway }}"

###
### Common
###
veggie_hostname: "{{ veggie_nas_domain_name }}"
veggie_admin_username: "{{ veggie_nas_admin_username }}"
veggie_admin_passwd: "{{ veggie_nas_admin_passwd }}"
veggie_users_passwords:
  retropie: "*"

###
### Diun
###
diun_notify_mail_host: "{{ vault_diun_notify_mail_host }}"
diun_notify_mail_port: "{{ vault_diun_notify_mail_port }}"
diun_notify_mail_ssl: true
diun_notify_mail_insecure_skip_verify: false
diun_notify_mail_username: "{{ vault_diun_notify_mail_username }}"
diun_notify_mail_password: "{{ vault_diun_notify_mail_password }}"
diun_notify_mail_from: "{{ vault_diun_notify_mail_from }}"
diun_notify_mail_to: "{{ vault_diun_notify_mail_to }}"
diun_regopts_dockerio_user: "{{ vault_diun_regopts_dockerio_user }}"
diun_regopts_dockerio_passwd: "{{ vault_diun_regopts_dockerio_passwd }}"

###
### Docker
###
docker_home: /mnt/nas/docker
docker_daemon_options:
  storage-driver: "zfs"
  data-root: "{{ docker_home }}/data"

organicveggie_docker_networks:
  - name: "{{ glances_network_name }}"
    enable_ipv6: "no"
    internal: "yes"
    scope: "local"
    subnet: "172.18.0.0/16"
    gateway: "172.18.0.1"
  - name: "{{ portainer_network_name }}"
    enable_ipv6: "no"
    internal: "yes"
    scope: "local"
    subnet: "172.20.0.0/16"
    gateway: "172.20.0.1"
  - name: "{{ influxdb_network_name }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "172.21.0.0/16"
    gateway: "172.21.0.1"
  - name: "{{ restic_rest_server_network_name }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "172.22.0.0/16"
    gateway: "172.22.0.1"
  - name: "{{ nodered_docker_network_name }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "172.23.0.0/16"
    gateway: "172.23.0.1"
  - name: "{{ diun_docker_network_name }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "172.24.0.0/16"
    gateway: "172.24.0.1"
  - name: "{{ calibre_docker_network_name }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "172.100.1.0/24"
    gateway: "172.100.1.1"
  - name: "{{ grafana_network_name }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "172.100.2.0/24"
    gateway: "172.100.2.1"
  - name: "{{ photoprism_network_name }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "172.100.3.0/24"
    gateway: "172.100.3.1"
  - name: "{{ unific_network_name }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "{{ unific_network_subnet }}"
    gateway: "{{ unific_network_gateway }}"
  # - name: "{{ postgresql_docker_network_name }}"
  #   enable_ipv6: "no"
  #   internal: "yes"
  #   scope: "local"
  #   subnet: "{{ postgresql_docker_network_subnet }}"
  #   gateway: "{{ postgresql_docker_network_gateway }}"
  # - name: "{{ home_assistant_docker_network }}"
  #   enable_ipv6: "no"
  #   internal: "yes"
  #   scope: "local"
  #   subnet: "{{ home_assistant_docker_network_subnet }}"
  #   gateway: "{{ home_assistant_docker_network_gateway }}"
  - name: "{{ tautulli_docker_network }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "{{ tautulli_docker_network_subnet }}"
    gateway: "{{ tautulli_docker_network_gateway }}"
  - name: "{{ pmm_docker_network }}"
    enable_ipv6: "no"
    internal: "no"
    scope: "local"
    subnet: "{{ pmm_docker_network_subnet }}"
    gateway: "{{ pmm_docker_network_gateway }}"

###
### Glances
###
glances_host_domain: "{{ veggie_nas_domain_name }}"

###
### Grafana
###
grafana_docker_memory: "1G"
grafana_docker_config_dir: "/mnt/nas/grafana/etc"
grafana_docker_zfs_filesystems:
  - "nas/grafana"
  - "nas/grafana/etc"
grafana_docker_host_domain: "{{ veggie_base_domain_name }}"
grafana_docker_admin_password: "{{ vault_grafana_docker_admin_password }}"
grafana_docker_smtp_enabled: "true"
grafana_docker_smtp_host: "{{ vault_grafana_docker_smtp_host }}"
grafana_docker_smtp_user: "{{ vault_grafana_docker_smtp_user }}"
grafana_docker_smtp_password: "{{ vault_grafana_docker_smtp_password }}"
grafana_docker_smtp_from_address: "{{ primary_email_address }}"
grafana_docker_extra_networks:
  - "influxdb"

###
### Home Assistant
###
home_assistant_docker_use_volumes: "true"
home_assistant_docker_network_subnet: "172.100.6.0/24"
home_assistant_docker_network_gateway: "172.100.6.1/24"
home_assistant_docker_hostname: "hass"
home_assistant_docker_host_domain: "{{ veggie_nas_domain_name }}"
home_assistant_docker_memory: "3G"
hass_home_latitude: "{{ home_latitude }}"
hass_home_longitude: "{{ home_longitude }}"
hass_home_timezone: "{{ home_timezone }}"
hass_url: "http://{{ vault_hass_hostname }}"
hass_db_user: "{{ vault_hass_db_user }}"
hass_db_password: "{{ vault_hass_db_password }}"

###
### InfluxDB
###
influxdb_docker_host_domain: "{{ veggie_nas_domain_name }}"
influxdb_docker_conf_dir: "/mnt/nas/influxdb/etc"
influxdb_docker_zfs_filesystems:
  - "nas/influxdb"
  - "nas/influxdb/etc"
influxdb_docker_superuser_name: "{{ influxdb_admin_user }}"
influxdb_docker_superuser_password: "{{ influxdb_admin_password }}"
influxdb_docker_superuser_org: "{{ influxdb_admin_org }}"
influxdb_docker_superuser_token: "{{ influxdb_admin_token }}"
influxdb_docker_init_bucket: "admin"

###
### Let's Encrypt / Certbot
###
certbot_domain_name: "{{ veggie_nas_domain_name }}"
certbot_admin_email: "{{ letsencrypt_email }}"
certbot_aws_access_key_id: "{{ letsencrypt_aws_access_key }}"
certbot_aws_secret_access_key: "{{ letsencrypt_aws_secret_key }}"

###
### Logrotate
###
logrotate_scripts:
  - name: rclone
    path: "/var/log/rclone.log"
    options:
      - daily
      - rotate 7
      - missingok
      - compress
      - delaycompress
      - copytruncate

###
### NAS
###
veggie_nas_admin_passwd: "{{ vault_nas_admin_passwd }}"
veggie_nas_admin_samba_passwd: "{{ vault_nas_admin_samba_passwd }}"
veggie_nas_admin_username: "{{ vault_nas_admin_username }}"
veggie_nas_plex_password: "{{ vault_nas_plex_password }}"
veggie_nas_retropie_password: "{{ vault_nas_retropie_password }}"

###
### NFS
###
nfs_exports:
  - "/mnt/nas/data/books {{ veggie_virt_domain_name }}(rw,sync,no_subtree_check,no_root_squash)"
  - "/mnt/nas/data/music {{ veggie_virt_domain_name }}(rw,sync,no_subtree_check,no_root_squash)"
  - "/mnt/nas/data/videos {{ veggie_virt_domain_name }}(rw,sync,no_subtree_check,no_root_squash)"

###
### Node-RED
###
nodered_docker_image: "{{ vault_nodered_docker_image }}"
nodered_host_domain: "{{ veggie_nas_domain_name }}"

###
### organicveggie.folders
###
organicveggie_folders_create:
  - path: "{{ docker_home }}"
    owner: root
    group: root
    mode: "755"

###
### PgAdmin
###
pgadmin_default_email: "{{ primary_email_address }}"
pgadmin_default_password: "{{ postgres_docker_admin_password }}"

pgadmin_docker_available_externally: true
pgadmin_docker_extra_networks: "{{ postgres_docker_network_name }}"
pgadmin_docker_host_domain: "{{ veggie_nas_domain_name }}"
pgadmin_docker_network_create: false
pgadmin_docker_network_gateway: "{{ vault_pgadmin_docker_network_gateway }}"
pgadmin_docker_network_subnet: "{{ vault_pgadmin_docker_network_subnet }}"
pgadmin_docker_use_volumes: true
pgadmin_docker_servers:
  "pg_hass":
    Name: "Hass Postgres"
    Group: "Servers"
    Port: "5432"
    Username: "postgres"
    Host: "postgres"
    SSLMode: "prefer"
    MaintenanceDB: "postgres"

pgadmin_docker_email_server: "email-smtp.us-west-2.amazonaws.com"
pgadmin_docker_email_port: "587"
pgadmin_docker_email_use_ssl: "False"
pgadmin_docker_email_user_tls: "True"
pgadmin_docker_email_username: "{{ aws_ses_usw2_access_key }}"
pgadmin_docker_email_password: "{{ aws_ses_usw2_secret_key }}"

###
### Photoprism
###
photoprism_admin_password: "{{ vault_photoprism_admin_password }}"
photoprism_docker_host_domain: "{{ veggie_base_domain_name }}"
photoprism_dir: "/mnt/nas/photoprism"
photoprism_extra_groups: "photo_writer"
photoprism_mariadb_dir: "/mnt/nas/photoprism-mariadb"
photoprism_mariadb_root_password: "{{ vault_photoprism_mariadb_root_password }}"
photoprism_mariadb_password: "{{ vault_photoprism_mariadb_password }}"
photoprism_zfs_filesystems:
  - dataset: "nas/photoprism"
    path: "/mnt/nas/photoprism"
  - dataset: "nas/photoprism-mariadb"
    path: "/mnt/nas/photoprism-mariadb"

###
### Plex
###
plex_docker_claim: "{{ vault_plex_docker_claim }}"
plex_docker_cpus: "8"
plex_docker_memory: "4GB"

###
### Plex Meta Manager
###
pmm_docker_cpus: "2"
pmm_docker_dns_servers:
  - "{{ default_dns_address }}"
  - "8.8.8.8"
  - "8.8.4.4"
pmm_docker_memory: "1G"
pmm_docker_network_subnet: "172.100.8.0/24"
pmm_docker_network_gateway: "172.100.8.1"
pmm_docker_timezone: "{{ home_timezone }}"

pmm_docker_config_read_only: "true"
pmm_docker_plex_url: "{{ vault_pmm_docker_plex_url }}"
pmm_docker_plex_token: "{{ vault_pmm_docker_plex_token }}"
pmm_docker_tmdb_apikey: "{{ vault_pmm_docker_tmdb_apikey }}"
pmm_docker_tmdb_language: "en"
pmm_docker_tmdb_region: "us"
pmm_docker_tautulli_url: "{{ vault_pmm_docker_tautulli_url }}"
pmm_docker_tautulli_apikey: "{{ vault_pmm_docker_tautulli_apikey }}"
pmm_docker_libraries: |2
    Movies:
      report_path: /config/reports/Movies.yml
      template_variables:
        language: "en"
      metadata_path:
        - pmm: actor
        - pmm: basic
        - pmm: bafta
        - pmm: cannes
        - pmm: decade
        - pmm: director
        - pmm: flixpatrol
        - pmm: franchise
          template_variables:
            data:
              visible_home: true
        - pmm: genre
          template_variables:
            data:
              visible_home: true
        - pmm: imdb
        - pmm: oscars
          template_variables:
            data:
              starting: current_year-10
              ending: current_year
        - pmm: resolution
        - pmm: seasonal
          template_variables:
            data:
              visible_home: true
        - pmm: streaming
        - pmm: sundance
        - pmm: tautulli
        - pmm: tmdb
        - pmm: trakt
        - pmm: universe
        - pmm: year
      overlay_path:
        - remove_overlays: false
        - pmm: ribbon
    TV Shows:
      report_path: /config/reports/TV_Shows.yml
      template_variables:
        language: en
      metadata_path:
        - pmm: basic
        - pmm: franchise
        - pmm: genre
        - pmm: network
        - pmm: resolution
        - pmm: tautulli
        - pmm: trakt
        - pmm: year
      overlay_path:
        - remove_overlays: false
        - pmm: ribbon
    Anime Movies:
      report_path: /config/reports/Anime_Movies.yml
      template_variables:
        language: en
      metadata_path:
        - pmm: anilist
        - pmm: basic
        - pmm: myanimelist
        - pmm: other
        - pmm: studio_anime
    Anime Series:
      report_path: /config/reports/Anime_Series.yml
      template_variables:
        language: en
      metadata_path:
        - pmm: anilist
        - pmm: basic
        - pmm: myanimelist
        - pmm: other
        - pmm: studio_anime

# See https://replit.com/@chazlarson/TraktAuth to generate the auth data.
pmm_docker_trakt: |2
    client_id: {{ vault_pmm_docker_trakt_client_id }}
    client_secret: {{ vault_pmm_docker_trakt_client_secret }}
    pin:
    authorization:
      access_token: {{ vault_pmm_docker_trakt_access_token }}
      token_type: {{ vault_pmm_docker_trakt_token_type }}
      expires_in: {{ vault_pmm_docker_trakt_expires_in }}
      refresh_token: {{ vault_pmm_docker_trakt_refresh_token }}
      scope: {{ vault_pmm_docker_trakt_scope }}
      created_at: {{ vault_pmm_docker_trakt_created_at }}

###
### Pip
###
pip_install_packages:
  - docker

###
### Portainer
###
portainer_available_externally: "true"
portainer_admin_password: "{{ default_portainer_admin_password }}"
portainer_host_domain: "{{ veggie_nas_domain_name }}"

###
### PostgreSQL
###
postgres_docker_admin_password: "{{ vault_postgres_docker_admin_password }}"
postgres_docker_image: "postgres:14-bullseye"
postgres_docker_network_create: false
postgres_docker_network_gateway: "{{ vault_postgres_docker_network_gateway }}"
postgres_docker_network_name: "postgres"
postgres_docker_network_subnet: "{{ vault_postgres_docker_network_subnet }}"
postgres_docker_use_volumes: true

###
### RClone
###
rclone_configs:
  - name: AWSS3Remote
    properties:
      type: s3
      provider: AWS
      env_auth: false
      region: us-west-2
      location_constraint: us-west-2
      acl: private
      server_side_encryption: AES256
      storage_class: STANDARD
      access_key_id: "{{ aws_s3_rclone_access_key }}"
      secret_access_key: "{{ aws_s3_rclone_secret_key }}"
rclone_config_path: "{{ veggie_rclone_config_path }}"
veggie_rclone_s3_bucket: "{{ veggie_nas_rclone_s3_bucket }}"
veggie_rclone_config_path: /root/.config/rclone/rclone.conf

###
### Resilio Sync
###
resilio_docker_group_name: "resilio"
resilio_docker_user_name: "resilio"
resilio_docker_uid: "32420"
resilio_docker_gid: "32420"
resilio_docker_torrentz_dir: "/mnt/nas/data/videos/torrentz"
resilio_docker_extra_dirs:
  "{{ resilio_docker_torrentz_dir }}": "torrentz"
resilio_docker_host_domain: "{{ veggie_nas_domain_name }}"
resilio_docker_network_subnet: "172.100.9.0/24"
resilio_docker_network_gateway: "172.100.9.1"

###
### Restic
###
restic_rest_server_backup_dir: "{{ veggie_nas_restic_rest_server_backup_dir }}"
restic_rest_server_hostname: "{{ veggie_nas_restic_rest_server_hostname }}"
restic_rest_server_host_domain: "{{ veggie_nas_domain_name }}"
restic_server_users:
  - name: "{{ restic_user_desktop | default('') }}"
    password: "{{ restic_htpasswd_desktop | default('') }}"
  - name: "{{ restic_user_unific | default('') }}"
    password: "{{ restic_htpasswd_unific | default('') }}"

###
### Samba
###
samba_domain_master: auto
samba_preferred_master: auto
samba_wins_support: false

# Defaults to true, which disables share browsing by Windows clients.
# See https://access.redhat.com/security/cve/cve-2017-7494
samba_mitigate_cve_2017_7494: false
samba_users:
  - name: "{{ veggie_nas_admin_username }}"
    password: "{{ veggie_nas_admin_samba_passwd }}"
  # - name: "plex"
  #   password: "{{ veggie_nas_plex_password }}"
  - name: "retropie"
    password: "{{ veggie_nas_retropie_password }}"
  - name: "kstar"
    password: "{{ veggie_kstar_password }}"
samba_shares:
  - name: books
    path: /mnt/nas/data/books
    group: book_writer
    write_list: +book_writer
  - name: documents
    path: /mnt/nas/data/documents
    group: doc_writer
    write_list: +doc_writer
  - name: music
    path: /mnt/nas/data/music
    group: music_writer
    write_list: +music_writer
  - name: photos
    path: /mnt/nas/data/photos
    group: photo_writer
    write_list: +photo_writer
  - name: roms
    path: /mnt/nas/data/roms
    group: rom_writer
    write_list: +rom_writer
  - name: source
    path: /mnt/nas/data/source
    group: source_writer
    write_list: +source_writer
  - name: videos
    path: /mnt/nas/data/videos
    group: media_writer
    write_list: +media_writer
  - name: kstar
    path: /mnt/nas/kstar
    owner: kstar
    group: kstar
    create_mode: 0740
    directory_mode: 0770
veggie_nas_samba_groups:
  - book_writer
  - doc_writer
  - media_writer
  - music_writer
  - photo_writer
  - rom_writer
  - source_writer

###
### Tautulli
###
tautulli_docker_timezone: "{{ home_timezone }}"
tautulli_docker_network_subnet: "172.100.7.0/24"
tautulli_docker_network_gateway: "172.100.7.1"
tautulli_docker_host_domain: "{{ veggie_base_domain_name }}"

###
### Telegraf
###
telegraf_influxdb_url: "{{ influxdb_url }}"
telegraf_influxdb_token: "{{ influxdb_telegraf_token }}"
telegraf_influxdb_org: "{{ influxdb_admin_org }}"
telegraf_plugin_docker: true
telegraf_plugin_smartctl: true
telegraf_plugin_zfs_pool_sizes: true
telegraf_plugins_extra:
  - name: disk
    options:
      mount_points:
        - "/"
        - "/boot"
        - "/var/log"
        - "/mnt/nas"
        - "/mnt/nas/backups"
        - "/mnt/nas/data"
        - "/mnt/nas/data/books"
        - "/mnt/nas/data/documents"
        - "/mnt/nas/data/music"
        - "/mnt/nas/data/photos"
        - "/mnt/nas/data/roms"
        - "/mnt/nas/data/videos"
        - "/mnt/nas/docker"
        - "/mnt/nas/influxdb/lib"
        - "/mnt/nas/plex"
        - "/mnt/nas/time-machine"
  - name: prometheus
    options:
      urls:
        - "$INFLUX_URL"
    tags:
      influxdb_bucket: "influxdb"
  - name: zfs
    options:
      poolMetrics: true


###
### TimeMachine
###
timemachine_data_directory: "/mnt/nas/time-machine"
timemachine_volume_size_limit: "768000"
timemachine_share_name: "{{ vault_timemachine_share_name }}"
timemachine_smb_password: "{{ vault_timemachine_smb_password }}"
timemachine_smb_user: "{{ vault_timemachine_smb_user }}"

###
### Traefik
###
traefik_hostname: "traefik.{{ veggie_nas_domain_name }}"
traefik_confkey_api:
  dashboard: true # use this for enabling the dashboard
# traefik_confkey_log:
#   level: DEBUG
#   filePath: /var/log/traefik.log
traefik_qs_https: "true"
traefik_qs_https_redirect: "true"
traefik_qs_https_le: "true"
traefik_qs_https_le_mail: "{{ letsencrypt_email }}"
traefik_qs_log_level: INFO
traefik_ports:
  - '80:80'
  - '443:443'
  - '3478:3478'
  - '8080:8080'
  - '10001:10001'
  - '19000:19000'
  - "55555:55555"
traefik_labels:
  traefik.enable: "true"
  traefik.http.routers.traefik.service: "api@internal"
  traefik.http.routers.traefik.entrypoints: "https"
  traefik.http.routers.traefik.tls.certresolver: "letsencrypt"
  traefik.http.routers.traefik.tls.domains[0].main: "*.{{ veggie_nas_domain_name }}"
traefik_confkey_providers:
  docker:
    defaultRule: "Host(`{{ traefik_hostname }}`)"
    exposedByDefault: false
traefik_le_ca_server: "https://acme-v02.api.letsencrypt.org/directory"
# traefik_le_ca_server: "https://acme-staging-v02.api.letsencrypt.org/directory"
traefik_confkey_certificatesResolvers:
  letsencrypt:
    acme:
      caServer: "{{ traefik_le_ca_server }}"
      dnsChallenge:
        provider: route53
traefik_confkey_entryPoints:
  java_http:
    address: ":8080"
  resilio_sync_tcp:
    address: ":55555"
  resilio_sync_udp:
    address: ":55555/udp"
  unific_speed_test:
    address: ":6789"
  unific_stun:
    address: ":3478/udp"
  unific_dev_discovery:
    address: ":10001/udp"
  unific_controller_discovery:
    address: ":19000/udp"
traefik_confkey_serversTransport:
  insecureSkipVerify: "true"
traefik_container_environment:
  AWS_HOSTED_ZONE_ID: "{{ acme_route53_hosted_zone_id }}"
  AWS_ACCESS_KEY_ID: "{{ letsencrypt_aws_access_key }}"
  AWS_SECRET_ACCESS_KEY: "{{ letsencrypt_aws_secret_key }}"

traefik_extra_networks:
  - name: "{{ calibre_web_docker_network }}"
  - name: "{{ diun_docker_network_name }}"
  - name: "{{ glances_network_name }}"
  - name: "{{ grafana_network_name }}"
  # - name: "{{ home_assistant_docker_network }}"
  - name: "{{ influxdb_network_name }}"
  - name: "{{ nodered_docker_network_name }}"
  - name: "{{ photoprism_network_name }}"
  - name: "{{ portainer_network_name }}"
  # - name: "{{ postgres_docker_network_name }}"
  - name: "{{ resilio_docker_network }}"
  - name: "{{ restic_rest_server_network_name }}"
  - name: "{{ tautulli_docker_network }}"
  - name: "{{ unific_network_name }}"

###
### UniFi Controiller
###
unific_available_externally: "true"
unific_host_domain: "{{ veggie_base_domain_name }}"
unific_cpus: "2"
unific_memory: "2GB"
# unific_traefik_router_rule: "Host(`{{ unific_hostname }}.{{ unific_host_domain }}`)||Host(`{{ unific_hostname }}.{{ veggie_base_domain_name }}`)"
unific_traefik_router_rule: "Host(`{{ unific_hostname }}.{{ unific_host_domain }}`)"
unific_docker_network_created: true
unific_network_subnet: "172.100.4.0/24"
unific_network_gateway: "172.100.4.1"

###
### Users/Groups
###
users_list_host: "{{ nas_users }}"

###
### zwavejs2mqtt
###
zwavejs2mqtt_docker_use_volumes: true
zwavejs2mqtt_docker_network: "{{ home_assistant_docker_network }}"
zwavejs2mqtt_host_domain: "{{ veggie_base_domain_name }}"
zwavejs2mqtt_timezone: "{{ home_timezone }}"
