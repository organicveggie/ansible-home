---
- name: Grafana Docker volumes
  community.docker.docker_volume:
    name: "{{ grafana_docker_volume_data_name }}"

- name: Grafana Docker Container
  community.docker.docker_container:
    name: grafana
    image: "{{ grafana_docker_image }}:{{ grafana_docker_image_tag }}"
    pull: true
    mounts:
      - source: "{{ grafana_docker_config_dir }}/grafana.ini"
        target: "/etc/grafana/grafana.ini"
        type: "bind"
        read_only: "true"
      - source: "{{ grafana_docker_volume_data_name }}"
        target: "/var/lib/grafana"
        type: "volume"
    user: "{{ grafana_docker_username }}"
    network_mode: "{{ grafana_network_name }}"
    networks:
      - name: "{{ grafana_network_name }}"
    exposed_ports:
      - "{{ grafana_docker_port }}"
    restart_policy: unless-stopped
    cpus: "{{ grafana_docker_cpus }}"
    memory: "{{ grafana_docker_memory }}"
    container_default_behavior: no_defaults
    auto_remove: no
    detach: yes
    init: yes
    interactive: no
    paused: no
    privileged: no
    read_only: no
    tty: no
    labels:
      traefik.enable: "{{ grafana_available_externally }}"
      traefik.http.routers.grafana.rule: "Host(`{{ grafana_docker_hostname }}.{{ grafana_docker_host_domain }}`)"
      traefik.http.routers.grafana.entrypoints: "http,https"
      traefik.http.routers.grafana.tls.certresolver: "letsencrypt"
      traefik.http.routers.grafana.tls.domains[0].main: "*.{{ grafana_docker_host_domain }}"
      traefik.http.services.grafana.loadbalancer.server.port: "{{ grafana_docker_port }}"

- name: Add Grafana container to any extra networks
  community.docker.docker_network:
    name: "{{ item }}"
    connected:
      - "grafana"
    appends: yes
  loop: "{{ grafana_docker_extra_networks }}"