---
# tasks file for samba_docker

- name: "samba | Set Docker bind mount list for Samba shares"
  ansible.builtin.set_fact:
    _samba_docker_bind_mounts: >
      {{ _samba_docker_bind_mounts | default([]) + [{
        'source': item.key,
        'target': item.value,
        'type': 'bind'}] }}
  loop: "{{ samba_docker_share_mounts | dict2items }}"

- name: "samba | Set Docker complete mount list"
  ansible.builtin.set_fact:
    _samba_docker_all_mounts: >
      {{ _samba_docker_volume_mounts | default([]) + _samba_docker_bind_mounts | default([]) }}

- name: "samba | Create placeholder array for default network"
  ansible.builtin.set_fact:
    _samba_docker_default_networks:
      - name: "{{ samba_docker_network_name }}"
        aliases: "{{ samba_docker_network_aliases | default(omit) }}"
        ipv4_address: "{{ samba_docker_network_ipv4 | default(omit) }}"

- name: "samba | Define all networks for this container"
  ansible.builtin.set_fact:
    _samba_docker_all_networks: >
      {{ samba_docker_extra_networks | default([]) + _samba_docker_default_networks }}

- name: "samba | Define standard environment variables"
  ansible.builtin.set_fact:
    _samba_docker_base_env_vars:  "{{ _samba_docker_base_env_vars | default({}) |
      combine({item.key: item.value}) }}"
  no_log: true
  when: item.value is defined and item.value != ''
  loop: "{{ _samba_docker_env_var_data | dict2items }}"
  vars:
    _samba_docker_env_var_data:
      "AVAHI_DISABLE": "{{ samba_docker_avahi_disable | default(omit) }}"
      "AVAHI_NAME": "{{ samba_docker_avahi_name | default(omit) }}"
      "SAMBA_CONF_LOG_LEVEL": "{{ samba_docker_log_level | default(omit) }}"
      "SAMBA_CONF_SERVER_STRING": "{{ samba_docker_server_string | default(omit) }}"
      "SAMBA_CONF_WORKGROUP": "{{ samba_docker_workgroup | default(omit) }}"
      "SAMBA_GLOBAL_STANZA": "{{ samba_docker_global_options | default([]) | join(';') }}"
      "TZ": "{{ samba_docker_timezone }}"
      "WSDD2_DISABLE": "{{ samba_docker_wsdd2_disable | default(omit) }}"
      "WSDD2_PARAMETERS": "{{ samba_docker_wsdd2_params | default(omit) }}"

- name: "samba | Define global config environment variables"
  ansible.builtin.set_fact:
    _samba_docker_global_vars:  "{{ _samba_docker_global_vars | default({}) |
      combine({'SAMBA_GLOBAL_CONFIG_' + item.key: item.value}) }}"
  no_log: true
  loop: "{{ samba_docker_global_key_values | dict2items }}"

- name: "samba | Define user accounts"
  ansible.builtin.set_fact:
    _samba_docker_accounts: >
      {{ _samba_docker_accounts | default({}) | combine({'ACCOUNT_' + item.key: item.value}) }}
  no_log: true
  loop: "{{ samba_docker_accounts | dict2items }}"

- name: "samba | Define UIDs"
  ansible.builtin.set_fact:
    _samba_docker_uids: >
      {{ _samba_docker_uids | default({}) | combine({'UID_' + item.key: item.value}) }}
  no_log: true
  loop: "{{ samba_docker_uids | dict2items }}"

- name: "samba | Define GIDs"
  ansible.builtin.set_fact:
    _samba_docker_gids: >
      {{ _samba_docker_gids | default({}) | combine({'GROUP_' + item.key: item.value}) }}
  no_log: true
  loop: "{{ samba_docker_gids | dict2items }}"

- name: "samba | Define extra user groups"
  ansible.builtin.set_fact:
    _samba_docker_user_groups: >
      {{ _samba_docker_user_groups | default({}) | combine({'GROUPS_' + item.key: item.value}) }}
  no_log: true
  loop: "{{ samba_docker_extra_user_groups | dict2items }}"

- name: "samba | Define shares"
  ansible.builtin.set_fact:
    _samba_docker_shares: >
      {{ _samba_docker_shares | default({}) | 
      combine({'SAMBA_VOLUME_CONFIG_' + item.key: item.value}) }}
  no_log: true
  loop: "{{ samba_docker_shares | dict2items }}"

- name: "samba | Define complete set of environment variables"
  ansible.builtin.set_fact:
    _samba_docker_all_env_vars: >
      {{ _samba_docker_all_env_vars | default({}) | combine(item) }}
  no_log: true
  loop:
    - "{{ _samba_docker_base_env_vars | default({}) }}"
    - "{{ _samba_docker_global_vars | default({}) }}"
    - "{{ _samba_docker_accounts | default({}) }}"
    - "{{ _samba_docker_uids | default({}) }}"
    - "{{ _samba_docker_gids | default({}) }}"
    - "{{ _samba_docker_user_groups | default({}) }}"
    - "{{ _samba_docker_shares | default({}) }}"

- name: "samba | Create container"
  community.docker.docker_container:
    name: "{{ samba_docker_name }}"
    image: "{{ samba_docker_image_name }}:{{ samba_docker_image_version }}"
    pull: true
    env: "{{ _samba_docker_all_env_vars }}"
    mounts: "{{ _samba_docker_all_mounts }}"
    network_mode: "{{ samba_docker_network_name }}"
    networks: "{{ _samba_docker_all_networks }}"
    restart_policy: "unless-stopped"
    restart: "{{ _samba_docker_config.changed | default(false) }}"
    memory: "{{ samba_docker_memory }}"
    cpus: "{{ samba_docker_cpus }}"
    capabilities: "{{ samba_docker_extra_capabilities | default([]) }}"
    command_handling: "correct"
    container_default_behavior: "no_defaults"
    auto_remove: false
    detach: true
    init: true
    interactive: true
    paused: false
    privileged: false
    read_only: false
    tty: true
