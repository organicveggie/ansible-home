---
- name: Create zwavejs2mqtt directory
  ansible.builtin.file:
    name: "{{ zwavejs2mqtt_data_dir }}"
    state: "directory"
    mode: "0770"
  when: not zwavejs2mqtt_docker_use_volumes

- name: Create zwavejs2mqtt data volume
  community.docker.docker_volume:
    name: "{{ zwavejs2mqtt_docker_volume_name }}"
  when: zwavejs2mqtt_docker_use_volumes

- name: Zwavejs2mqtt Docker Container w/out volumes
  community.docker.docker_container:
    name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    pull: true
    volumes:
      - "{{ zwavejs2mqtt_data_dir }}:/usr/src/app/store"
    env:
      TZ: "{{ zwavejs2mqtt_timezone }}"
    network_mode: "{{ zwavejs2mqtt_docker_network }}"
    restart_policy: unless-stopped
    memory: "{{ zwavejs2mqtt_docker_memory }}"
    cpus: "{{ zwavejs2mqtt_docker_cpus }}"
    devices:
      - "{{ zwavejs2mqtt_device }}:/dev/ttyACM0"
    container_default_behavior: no_defaults
    auto_remove: no
    detach: yes
    init: yes
    interactive: no
    paused: no
    privileged: no
    read_only: no
    tty: no
    labels:
      traefik.enable: "{{ zwavejs2mqtt_available_externally }}"
      traefik.http.routers.zwavejs2.rule: "Host(`{{ zwavejs2mqtt_hostname }}.{{ zwavejs2mqtt_host_domain }}`)"
      traefik.http.routers.zwavejs2.entrypoints: "http,https"
      traefik.http.routers.zwavejs2.tls.certresolver: "letsencrypt"
      traefik.http.routers.zwavejs2.tls.domains[0].main: "*.{{ zwavejs2mqtt_host_domain }}"
      traefik.http.services.zwavejs2.loadbalancer.server.port: "{{ zwavejs2mqtt_web_port }}"
      traefik.tcp.routers.zwavejs2.entrypoints: "zwavejs2"
      traefik.tcp.routers.zwavejs2.rule: "HostSNI(`*`)"
      traefik.tcp.routers.zwavejs2.service: "zwavejs2"
      traefik.tcp.services.zwavejs2.loadbalancer.server.port: "{{ zwavejs2mqtt_ws_port }}"
  when: not zwavejs2mqtt_docker_use_volumes

- name: Zwavejs2mqtt Docker Container with volumes
  community.docker.docker_container:
    name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    pull: true
    mounts:
      - source: "{{ zwavejs2mqtt_docker_volume_name }}"
        target: "/usr/src/app/store"
        type: "volume"
    env:
      TZ: "{{ zwavejs2mqtt_timezone }}"
    network_mode: "{{ zwavejs2mqtt_docker_network }}"
    restart_policy: unless-stopped
    memory: "{{ zwavejs2mqtt_docker_memory }}"
    cpus: "{{ zwavejs2mqtt_docker_cpus }}"
    devices:
      - "{{ zwavejs2mqtt_device }}:/dev/ttyACM0"
    container_default_behavior: no_defaults
    auto_remove: no
    detach: yes
    init: yes
    interactive: no
    paused: no
    privileged: no
    read_only: no
    tty: no
    labels:
      traefik.enable: "{{ zwavejs2mqtt_available_externally }}"
      traefik.http.routers.zwavejs2.rule: "Host(`{{ zwavejs2mqtt_hostname }}.{{ zwavejs2mqtt_host_domain }}`)"
      traefik.http.routers.zwavejs2.entrypoints: "http,https"
      traefik.http.routers.zwavejs2.tls.certresolver: "letsencrypt"
      traefik.http.routers.zwavejs2.tls.domains[0].main: "*.{{ zwavejs2mqtt_host_domain }}"
      traefik.http.services.zwavejs2.loadbalancer.server.port: "{{ zwavejs2mqtt_web_port }}"
      traefik.tcp.routers.zwavejs2.entrypoints: "zwavejs2"
      traefik.tcp.routers.zwavejs2.rule: "HostSNI(`*`)"
      traefik.tcp.routers.zwavejs2.service: "zwavejs2"
      traefik.tcp.services.zwavejs2.loadbalancer.server.port: "{{ zwavejs2mqtt_ws_port }}"
  when: zwavejs2mqtt_docker_use_volumes
