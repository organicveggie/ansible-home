---
- name: "Create {{ glances_docker_config_path }}"
  ansible.builtin.file:
    path: "{{ glances_docker_config_path }}"
    state: "directory"
    mode: "0755"

- name: "Define full pathname to the glances config file"
  ansible.builtin.set_fact:
    _glances_docker_config_pathname: "{{ glances_docker_config_path }}/{{ glances_docker_config_name }}"

- name: "Install {{ _glances_docker_config_pathname }}"
  ansible.builtin.template:
    src: "templates/glances.conf"
    dest: "{{ _glances_docker_config_pathname }}"
    mode: "0644"
  register: _glances_config

- name: "Define mount list for required mounts"
  ansible.builtin.set_fact:
    _glances_docker_mount_list: >
      {{ _glances_docker_mount_list | default([]) + [{ 'source': item.key, 'target': item.value, 'type': 'bind', 'read_only': true }] }}
  loop: "{{ _glances_docker_required_mounts_map | dict2items }}"
  vars:
    _glances_docker_required_mounts_map:
      "/var/run/docker.sock": "/var/run/docker.sock"
      "/etc/timezone": "/etc/timezone"
      "{{ _glances_docker_config_pathname }}": "/glances/conf/glances.conf"
      "/etc/os-release": "/etc/os-release"

- name: "Build list of extra mount points"
  ansible.builtin.set_fact:
    _glances_docker_mount_list: >
      {{ _glances_docker_mount_list | default([]) + [item] }}
  loop: "{{ glances_docker_extra_bind_mounts | default([]) }}"

# - ansible.builtin.debug:
#     msg: "{{ _glances_docker_mount_list }}"

- name: "Create Glances Docker Container"
  community.docker.docker_container:
    name: "{{ glances_docker_name }}"
    image: "{{ glances_docker_image }}:{{ glances_docker_image_version }}"
    pull: true
    exposed_ports:
      - "{{ glances_docker_port }}"
    env:
      GLANCES_OPT: "-w"
    mounts: "{{ _glances_docker_mount_list }}"
    network_mode: "{{ glances_docker_network_name }}"
    restart_policy: unless-stopped
    restart: "{{ _glances_config.changed | default(false) }}"
    memory: "{{ glances_docker_memory }}"
    pid_mode: host
    security_opts:
      - "apparmor:unconfined"
    container_default_behavior: no_defaults
    auto_remove: no
    detach: yes
    init: no
    interactive: no
    paused: no
    privileged: no
    read_only: no
    tty: no
    labels:
      traefik.enable: "{{ glances_docker_available_externally }}"
      traefik.docker.network: "{{ glances_docker_network_name }}"
      traefik.http.routers.glances.rule: "Host(`{{ glances_docker_hostname }}.{{ glances_docker_host_domain }}`)"
      traefik.http.routers.glances.entrypoints: "http,https"
      traefik.http.routers.glances.tls.certresolver: "letsencrypt"
      traefik.http.routers.glances.tls.domains[0].main: "*.{{ glances_docker_host_domain }}"
      traefik.http.services.glances.loadbalancer.server.port: "{{ glances_docker_port }}"
