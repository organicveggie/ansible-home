---
- name: Node-RED Docker Volume
  community.docker.docker_volume:
    name: "{{ nodered_docker_volume_name }}"

- name: Node-RED Docker Container
  community.docker.docker_container:
    name: nodered
    image: "{{ nodered_docker_image }}"
    pull: true
    mounts:
      - source: "{{ nodered_docker_volume_name }}"
        target: "/data"
    network_mode: "{{ nodered_docker_network_name }}"
    networks:
      - name: "{{ nodered_docker_network_name }}"
    env:
      "NODERED_UID": "{{ nodered_uid }}"
      "NODERED_GID": "{{ nodered_gid }}"
    restart_policy: unless-stopped
    memory: "{{ nodered_docker_memory }}"
    cpus: "{{ nodered_docker_cpus }}"
    container_default_behavior: no_defaults
    auto_remove: no
    detach: yes
    init: yes
    interactive: no
    paused: no
    privileged: no
    read_only: no
    tty: no
    labels:
      traefik.enable: "{{ nodered_available_externally }}"
      traefik.docker.network: "{{ nodered_docker_network_name }}"
      traefik.http.routers.nodered.rule: "Host(`{{ nodered_hostname }}.{{ nodered_host_domain }}`)"
      traefik.http.routers.nodered.entrypoints: "http,https"
      traefik.http.routers.nodered.tls.certresolver: "letsencrypt"
      traefik.http.routers.nodered.tls.domains[0].main: "*.{{ nodered_host_domain }}"
      traefik.http.services.nodered.loadbalancer.server.port: "{{ nodered_port }}"
