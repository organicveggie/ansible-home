---
- name: Home Assistant Docker Container
  community.docker.docker_container:
    name: homeassistant
    image: homeassistant/home-assistant:stable
    pull: true
    volumes:
      - "{{ home_assistant_docker_data_dir }}:/config"
      - "/etc/localtime:/etc/localtime:ro"
    # user: "{{ hass_docker_uid }}"
    network_mode: "{{ home_assistant_docker_network }}"
    networks:
      - name: "{{ home_assistant_docker_network }}"
      - name: "{{ postgresql_docker_network_name }}"
      - name: "{{ iot_vlan_docker_network_name }}"
    restart_policy: unless-stopped
    memory: "{{ home_assistant_docker_memory }}"
    cpus: "{{ home_assistant_docker_cpus }}"
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
    container_default_behavior: no_defaults
    auto_remove: no
    detach: yes
    init: yes
    interactive: no
    paused: no
    privileged: no
    read_only: no
    tty: no
    labels:
      traefik.enable: "{{ home_assistant_available_externally }}"
      traefik.http.routers.hass.rule: "Host(`{{ home_assistant_docker_hostname }}.{{ home_assistant_docker_host_domain }}`)"
      traefik.http.routers.hass.entrypoints: "http,https"
      traefik.http.routers.hass.tls.certresolver: "letsencrypt"
      traefik.http.routers.hass.tls.domains[0].main: "*.{{ home_assistant_docker_host_domain }}"
      traefik.http.services.hass.loadbalancer.server.port: "{{ home_assistant_docker_port }}"
      traefik.tcp.routers.hass.entrypoints: "ecowitt"
      traefik.tcp.routers.hass.rule: "HostSNI(`*`)"
      traefik.tcp.routers.hass.service: "hass"
      traefik.tcp.services.hass.loadbalancer.server.port: "{{ hass_ecowitt_port }}"