---
- name: "{{ bazarr_docker_role_label }} | Build config volume name"
  ansible.builtin.set_fact:
    _bazarr_config_volume_name: "{{ __custom_volume_name_empty | ternary(__default_volume_name, __custom_volume_name) }}"
  vars:
    __default_volume_name: "{{ bazarr_docker_name }}-config"
    __custom_volume_name: "{{ bazarr_docker_volume_config_name | default('', true) }}"
    __custom_volume_name_empty: "{{ bazarr_docker_volume_config_name | default('', true) | length <= 0 }}"

- name: "{{ bazarr_docker_role_label }} | Create bazarr Docker config volume: {{ _bazarr_config_volume_name }}"
  community.docker.docker_volume:
    name: "{{ _bazarr_config_volume_name }}"

- name: "{{ bazarr_docker_role_label }} | Set base Docker mount list"
  ansible.builtin.set_fact:
    _bazarr_docker_mount_list:
      - source: "{{ _bazarr_config_volume_name }}"
        target: "/config"
        type: "volume"
      - source: "{{ bazarr_docker_movie_source_path }}"
        target: "/movies"
        type: "bind"
      - source: "{{ bazarr_docker_tv_source_path }}"
        target: "/tv"
        type: "bind"

- name: "{{ bazarr_docker_role_label }} | Set additional mount list"
  ansible.builtin.set_fact:
    _bazarr_docker_mount_list: "{{ _bazarr_docker_mount_list + __extra_mount_list }}"
  vars:
    __extra_mount_list: "{{ bazarr_docker_extra_mounts | default([], true)  }}"

- name: "{{ bazarr_docker_role_label }} | Build container FQDN"
  ansible.builtin.set_fact:
    _bazarr_docker_fqdn: "{{ bazarr_docker_host_name }}.{{ bazarr_docker_host_domain }}"

- name: "{{ bazarr_docker_role_label }} | Create placeholder array for default network"
  ansible.builtin.set_fact:
    _bazarr_docker_default_networks:
      - name: "{{ bazarr_docker_network }}"
        aliases: "{{ bazarr_docker_network_aliases | default(omit) }}"

- name: "{{ bazarr_docker_role_label }} | Define all Docker networks for this container"
  ansible.builtin.set_fact:
    _bazarr_docker_all_networks: >
      {{ _bazarr_docker_default_networks + bazarr_docker_extra_networks }}
  vars:
    __extra_networks: "{{ bazarr_docker_extra_networks | default([], true) }}"

- name: "{{ bazarr_docker_role_label }} | Define placeholder map for Docker labels"
  ansible.builtin.set_fact:
    _bazarr_docker_labels:
      traefik.enable: "{{ bazarr_docker_available_externally }}"

- name: "{{ bazarr_docker_role_label }} | Define Docker labels with Traefik enabled"
  ansible.builtin.set_fact:
    _bazarr_docker_labels: "{{ _bazarr_docker_labels | default({}) |
      combine({item.key: item.value}) }}"
  with_items:
    - key: "traefik.docker.network"
      value: "{{ servarr_docker_network }}"
    - key: "traefik.http.routers.{{ bazarr_docker_host_name }}.rule"
      value: "Host(`{{ _bazarr_docker_fqdn }}`)"
    - key: "traefik.http.routers.{{ bazarr_docker_host_name }}.entrypoints"
      value: "http,https"
    - key: "traefik.http.routers.{{ bazarr_docker_host_name }}.tls.certresolver"
      value: "letsencrypt"
    - key: "traefik.http.routers.{{ bazarr_docker_host_name }}.tls.domains[0].main"
      value: "*.{{ bazarr_docker_host_domain }}"
    - key: "traefik.http.services.{{ bazarr_docker_host_name }}.loadbalancer.server.port"
      value: "{{ bazarr_docker_web_port | default(bazarr_docker_web_port_default, true) }}"
  when: "bazarr_docker_available_externally"

- name: "{{ bazarr_docker_role_label }} | Define user-supplied extra Docker labels"
  ansible.builtin.set_fact:
    _bazarr_docker_labels: "{{ _bazarr_docker_labels | default({}) |
      combine({item.key: item.value}) }}"
  loop: "{{ bazarr_docker_extra_labels | default({}, true) | dict2items }}"

- name: "{{ bazarr_docker_role_label }} | bazarr Docker Container"
  community.docker.docker_container:
    name: "{{ bazarr_docker_name }}"
    image: "{{ bazarr_docker_image }}:{{ bazarr_docker_image_version }}"
    pull: true
    env:
      "PUID": "{{ bazarr_docker_uid }}"
      "PGID": "{{ bazarr_docker_gid }}"
      "TZ": "{{ bazarr_docker_timezone }}"
    mounts: "{{ _bazarr_docker_mount_list }}"
    network_mode: "{{ bazarr_docker_network }}"
    networks: "{{ _bazarr_docker_all_networks }}"
    restart_policy: unless-stopped
    memory: "{{ bazarr_docker_memory }}"
    cpus: "{{ bazarr_docker_cpus }}"
    container_default_behavior: no_defaults
    auto_remove: no
    detach: yes
    init: no
    interactive: no
    paused: no
    privileged: no
    read_only: no
    tty: no
    labels: "{{ _bazarr_docker_labels }}"
